#include <zephyr/dt-bindings/pinctrl/stm32-pinctrl.h>
#include <zephyr/dt-bindings/display/ili9xxx.h>

/ {
    chosen {
        zephyr,display = &ili9341;
    }; 

    /*LCD*/
    mipi_dbi {
        compatible = "zephyr,mipi-dbi-spi";
        status = "okay";
        spi-dev = <&spi1>;
        dc-gpios = <&gpioc 15 GPIO_ACTIVE_HIGH>; 
        reset-gpios = <&gpioe 5 GPIO_ACTIVE_LOW>; 
        #pinctrl-0 = <&display_dc &display_reset>;
        #pinctrl-names = "default";
        #address-cells = <1>;
        #size-cells = <0>;
        write-only;

        ili9341: ili9341@0 {
            compatible = "ilitek,ili9341";
            reg = <0>;
            mipi-max-frequency = <10000000>;
            pixel-format = <ILI9XXX_PIXEL_FORMAT_RGB565>;
            rotation = <0>;
            width = <320>;
            height = <240>;
        };
    };

}; 


/* Pinmux configuration for SPI1 */
&pinctrl {
    spi1_sck: spi1_sck {
        pinmux = <STM32_PINMUX('B', 3, AF5)>;
        bias-disable; /* No pull-up/pull-down */
        drive-push-pull;
    };
    spi1_miso: spi1_miso {
        pinmux = <STM32_PINMUX('B', 4, AF5)>;
        bias-disable;
        drive-push-pull;
    };
    spi1_mosi: spi1_mosi {
        pinmux = <STM32_PINMUX('B', 5, AF5)>;
        bias-disable;
        drive-push-pull;
    };
    /* Chip Select (CS) pin: PB6 */
    spi1_cs: spi1_cs {
        pinmux = <STM32_PINMUX('C', 13, GPIO)>;
        bias-disable;
        drive-push-pull;
    };
    /* Data/Command (DC) pin: PB7 */
    display_dc: display_dc {
        pinmux = <STM32_PINMUX('C', 15, GPIO)>; 
        bias-disable;
        drive-push-pull;
    };
    /* Reset pin: PB8 */
    display_reset: display_reset {
        pinmux = <STM32_PINMUX('E', 5, GPIO)>;
        bias-disable;
        drive-push-pull;
    };
};

/* SPI1 peripheral configuration */
&spi1 {
    status = "okay";
    pinctrl-0 = <&spi1_sck &spi1_miso &spi1_mosi>;
    pinctrl-names = "default";
    cs-gpios = <&gpioc 13 GPIO_ACTIVE_LOW>; 
   
};